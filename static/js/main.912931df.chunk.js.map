{"version":3,"sources":["redux/actions/actionTypes.js","api/apiUtils.js","api/courseApi.js","api/questApi.js","redux/actions/monsterActions.js","components/home/HomePage.js","components/App.js","redux/reducers/initialState.js","redux/reducers/courseReducer.js","redux/reducers/authorReducer.js","redux/reducers/index.js","redux/reducers/pokeReducer.js","redux/reducers/monsterReducer.js","redux/reducers/adjectiveReducer.js","redux/reducers/emotionReducer.js","redux/reducers/entryTextReducer.js","redux/reducers/evilPlotReducer.js","redux/reducers/groupNameReducer.js","redux/reducers/lairReducer.js","redux/reducers/magicalObjectReducer.js","redux/reducers/scenarioReducer.js","redux/reducers/villainReducer.js","redux/reducers/actionReducer.js","redux/reducers/personReducer.js","index.js","redux/configureStore.js"],"names":["CREATE_COURSE","LOAD_COURSES_SUCCESS","LOAD_AUTHORS_SUCCESS","LOAD_POKES_SUCCESS","LOAD_MONSTERS_SUCCESS","LOAD_EMOTION_SUCCESS","LOAD_SCENARIO_SUCCESS","LOAD_ADJECTIVE_SUCCESS","LOAD_LAIR_SUCCESS","LOAD_VILLAIN_SUCCESS","LOAD_MAGICAL_OBJECT_SUCCESS","LOAD_EVIL_PLOT_SUCCESS","LOAD_ACTION_SUCCESS","LOAD_ENTRY_TEXT_SUCCESS","LOAD_GROUP_NAME_SUCCESS","LOAD_PERSON_SUCCESS","handleResponse","_x","_handleResponse","apply","this","arguments","_callee","response","error","regenerator_default","a","wrap","_context","prev","next","ok","abrupt","json","status","text","sent","Error","stop","handleError","console","process","API_URL","monsterUrl","adjectiveUrl","lairUrl","villainUrl","magicalObjectUrl","evilPlotUrl","actionUrl","entryTextUrl","groupNameUrl","personUrl","loadMonsters","dispatch","fetch","then","catch","monsters","type","types","loadMonstersSuccess","loadVillain","villain","loadVillainSuccess","loadEvilPlot","evilPlot","loadEvilPlotSuccess","loadAction","action","loadActionSuccess","loadEntryText","entryText","loadEntryTextSuccess","loadMagicalObject","magicalObject","loadMagicalObjectSuccess","loadGroupName","groupName","loadGroupNameSuccess","loadAdjective","adjective","loadAdjectiveSuccess","loadLair","lair","loadLairSuccess","loadPerson","person","loadPersonSuccess","CoursesPage","props","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","actions","alert","quest","react_default","createElement","Fragment","style","display","checkIfFinished","log","randomNum","getRandomInt","THIS","length","generateQuest","className","getTextSize","toUpperCase","React","Component","min","max","Math","ceil","floor","random","undefined","questLength","textSize48","textSize38","connect","state","values","test","bindActionCreators","monsterActions","App","HomePage","reducers_initialState","courses","pokes","authors","emotion","scenario","courseReducer","initialState","concat","toConsumableArray","objectSpread","course","authorReducer","rootReducer","combineReducers","author","store","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","reduxImmutableStateInvariant","configureStore","render","es","react_router_dom","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.912931df.chunk.js","sourcesContent":["export const CREATE_COURSE = \"CREATE_COURSE\";\r\nexport const LOAD_COURSES_SUCCESS = \"LOAD_COURSES_SUCCESS\";\r\nexport const LOAD_AUTHORS_SUCCESS = \"LOAD_AUTHORS_SUCCESS\";\r\nexport const LOAD_POKES_SUCCESS = \"LOAD_POKES_SUCCESS\";\r\nexport const LOAD_MONSTERS_SUCCESS = \"LOAD_MONSTERS_SUCCESS\";\r\nexport const LOAD_EMOTION_SUCCESS = \"LOAD_EMOTION_SUCCESS\";\r\nexport const LOAD_SCENARIO_SUCCESS = \"LOAD_SCENARIO_SUCCESS\";\r\nexport const LOAD_ADJECTIVE_SUCCESS = \"LOAD_ADJECTIVE_SUCCESS\";\r\nexport const LOAD_LAIR_SUCCESS = \"LOAD_LAIR_SUCCESS\";\r\nexport const LOAD_VILLAIN_SUCCESS = \"LOAD_VILLAIN_SUCCESS\";\r\nexport const LOAD_MAGICAL_OBJECT_SUCCESS = \"LOAD_MAGICAL_OBJECT_SUCCESS\";\r\nexport const LOAD_EVIL_PLOT_SUCCESS = \"LOAD_EVIL_PLOT_SUCCESS\";\r\nexport const LOAD_ACTION_SUCCESS = \"LOAD_ACTION_SUCCESS\";\r\nexport const LOAD_ENTRY_TEXT_SUCCESS = \"LOAD_ENTRY_TEXT_SUCCESS\";\r\nexport const LOAD_GROUP_NAME_SUCCESS = \"LOAD_GROUP_NAME_SUCCESS\";\r\nexport const LOAD_PERSON_SUCCESS = \"LOAD_PERSON_SUCCESS\";\r\n","export async function handleResponse(response) {\n  if (response.ok) return response.json();\n  if (response.status === 400) {\n    // So, a server-side validation error occurred.\n    // Server side validation returns a string error message, so parse as text instead of json.\n    const error = await response.text();\n    throw new Error(error);\n  }\n  throw new Error(\"Network response was not ok.\");\n}\n\n// In a real app, would likely call an error logging service.\nexport function handleError(error) {\n  // eslint-disable-next-line no-console\n  console.error(\"API call failed. \" + error);\n  throw error;\n}\n","import { handleResponse, handleError } from \"./apiUtils\";\nconst baseUrl = process.env.API_URL + \"/courses/\";\nconst pokeUrl = \"https://pokeapi.co/api/v2/pokemon?offset=0&limit=807\";\n\nexport function getPokes() {\n  return fetch(pokeUrl)\n    .then(handleResponse)\n    .catch(handleError);\n}\n\nexport function getCourses() {\n  return fetch(baseUrl)\n    .then(handleResponse)\n    .catch(handleError);\n}\n\nexport function saveCourse(course) {\n  return fetch(baseUrl + (course.id || \"\"), {\n    method: course.id ? \"PUT\" : \"POST\", // POST for create, PUT to update when id already exists.\n    headers: { \"content-type\": \"application/json\" },\n    body: JSON.stringify(course)\n  })\n    .then(handleResponse)\n    .catch(handleError);\n}\n\nexport function deleteCourse(courseId) {\n  return fetch(baseUrl + courseId, { method: \"DELETE\" })\n    .then(handleResponse)\n    .catch(handleError);\n}\n","import { handleResponse, handleError } from \"./apiUtils\";\r\nconst baseUrl = process.env.API_URL + \"/courses/\";\r\nconst pokeUrl = \"https://pokeapi.co/api/v2/pokemon?offset=0&limit=807\";\r\nconst monsterUrl =\r\n  \"https://sheets.googleapis.com/v4/spreadsheets/1bc_gPpuYbzDcW5W47EustUAWSAhJaEFdGVMmViW3adY/values/Monsters!A1:A500?key=AIzaSyCjvp9h7pTlx3pMYP70Esx0BGeHbVTxG0Q\";\r\nconst monsterUrlBack = \":A500?key=AIzaSyCjvp9h7pTlx3pMYP70Esx0BGeHbVTxG0Q\";\r\n\r\nconst emotionUrl =\r\n  \"https://sheets.googleapis.com/v4/spreadsheets/1bc_gPpuYbzDcW5W47EustUAWSAhJaEFdGVMmViW3adY/values/Emotion!A1:A500?key=AIzaSyCjvp9h7pTlx3pMYP70Esx0BGeHbVTxG0Q\";\r\n\r\nconst scenarioUrl =\r\n  \"https://sheets.googleapis.com/v4/spreadsheets/1bc_gPpuYbzDcW5W47EustUAWSAhJaEFdGVMmViW3adY/values/Scenario!A1:A500?key=AIzaSyCjvp9h7pTlx3pMYP70Esx0BGeHbVTxG0Q\";\r\n\r\nconst adjectiveUrl =\r\n  \"https://sheets.googleapis.com/v4/spreadsheets/1bc_gPpuYbzDcW5W47EustUAWSAhJaEFdGVMmViW3adY/values/Adjective!A1:A500?key=AIzaSyCjvp9h7pTlx3pMYP70Esx0BGeHbVTxG0Q\";\r\n\r\nconst lairUrl =\r\n  \"https://sheets.googleapis.com/v4/spreadsheets/1bc_gPpuYbzDcW5W47EustUAWSAhJaEFdGVMmViW3adY/values/Lair!A1:A500?key=AIzaSyCjvp9h7pTlx3pMYP70Esx0BGeHbVTxG0Q\";\r\n\r\nconst villainUrl =\r\n  \"https://sheets.googleapis.com/v4/spreadsheets/1bc_gPpuYbzDcW5W47EustUAWSAhJaEFdGVMmViW3adY/values/Villain!A1:A500?key=AIzaSyCjvp9h7pTlx3pMYP70Esx0BGeHbVTxG0Q\";\r\n\r\nconst magicalObjectUrl =\r\n  \"https://sheets.googleapis.com/v4/spreadsheets/1bc_gPpuYbzDcW5W47EustUAWSAhJaEFdGVMmViW3adY/values/Magical_Object!A1:A500?key=AIzaSyCjvp9h7pTlx3pMYP70Esx0BGeHbVTxG0Q\";\r\n\r\nconst evilPlotUrl =\r\n  \"https://sheets.googleapis.com/v4/spreadsheets/1bc_gPpuYbzDcW5W47EustUAWSAhJaEFdGVMmViW3adY/values/Evil_Plot!A1:A500?key=AIzaSyCjvp9h7pTlx3pMYP70Esx0BGeHbVTxG0Q\";\r\n\r\nconst actionUrl =\r\n  \"https://sheets.googleapis.com/v4/spreadsheets/1bc_gPpuYbzDcW5W47EustUAWSAhJaEFdGVMmViW3adY/values/Action!A1:A500?key=AIzaSyCjvp9h7pTlx3pMYP70Esx0BGeHbVTxG0Q\";\r\n\r\nconst entryTextUrl =\r\n  \"https://sheets.googleapis.com/v4/spreadsheets/1bc_gPpuYbzDcW5W47EustUAWSAhJaEFdGVMmViW3adY/values/Entry_Text!A1:A500?key=AIzaSyCjvp9h7pTlx3pMYP70Esx0BGeHbVTxG0Q\";\r\n\r\nconst groupNameUrl =\r\n  \"https://sheets.googleapis.com/v4/spreadsheets/1bc_gPpuYbzDcW5W47EustUAWSAhJaEFdGVMmViW3adY/values/Group_Name!A1:A500?key=AIzaSyCjvp9h7pTlx3pMYP70Esx0BGeHbVTxG0Q\";\r\n\r\nconst personUrl =\r\n  \"https://sheets.googleapis.com/v4/spreadsheets/1bc_gPpuYbzDcW5W47EustUAWSAhJaEFdGVMmViW3adY/values/Person!A1:A500?key=AIzaSyCjvp9h7pTlx3pMYP70Esx0BGeHbVTxG0Q\";\r\n\r\n// const monsterUrl =\r\n//   \"https://sheets.googleapis.com/v4/spreadsheets/1bc_gPpuYbzDcW5W47EustUAWSAhJaEFdGVMmViW3adY/values/Monsters?key=AIzaSyCjvp9h7pTlx3pMYP70Esx0BGeHbVTxG0Q\";\r\n\r\nexport function getMonsters() {\r\n  return fetch(monsterUrl)\r\n    .then(handleResponse)\r\n    .catch(handleError);\r\n}\r\n\r\nexport function getEmotion() {\r\n  return fetch(emotionUrl)\r\n    .then(handleResponse)\r\n    .catch(handleError);\r\n}\r\n\r\nexport function getScenario() {\r\n  return fetch(scenarioUrl)\r\n    .then(handleResponse)\r\n    .catch(handleError);\r\n}\r\n\r\nexport function getAdjective() {\r\n  return fetch(adjectiveUrl)\r\n    .then(handleResponse)\r\n    .catch(handleError);\r\n}\r\n\r\nexport function getLair() {\r\n  return fetch(lairUrl)\r\n    .then(handleResponse)\r\n    .catch(handleError);\r\n}\r\n\r\nexport function getVillain() {\r\n  return fetch(villainUrl)\r\n    .then(handleResponse)\r\n    .catch(handleError);\r\n}\r\n\r\nexport function getMagicalObject() {\r\n  return fetch(magicalObjectUrl)\r\n    .then(handleResponse)\r\n    .catch(handleError);\r\n}\r\n\r\nexport function getEvilPlot() {\r\n  return fetch(evilPlotUrl)\r\n    .then(handleResponse)\r\n    .catch(handleError);\r\n}\r\n\r\nexport function getAction() {\r\n  return fetch(actionUrl)\r\n    .then(handleResponse)\r\n    .catch(handleError);\r\n}\r\n\r\nexport function getEntryText() {\r\n  return fetch(entryTextUrl)\r\n    .then(handleResponse)\r\n    .catch(handleError);\r\n}\r\n\r\nexport function getGroupName() {\r\n  return fetch(groupNameUrl)\r\n    .then(handleResponse)\r\n    .catch(handleError);\r\n}\r\n\r\nexport function getPerson() {\r\n  return fetch(personUrl)\r\n    .then(handleResponse)\r\n    .catch(handleError);\r\n}\r\n","import * as types from \"./actionTypes\";\r\nimport * as questApi from \"../../api/questApi\";\r\n\r\nexport function loadMonstersSuccess(monsters) {\r\n  return { type: types.LOAD_MONSTERS_SUCCESS, monsters };\r\n}\r\n\r\nexport function loadMonsters() {\r\n  return function(dispatch) {\r\n    return questApi\r\n      .getMonsters()\r\n      .then(monsters => {\r\n        dispatch(loadMonstersSuccess(monsters));\r\n      })\r\n      .catch(error => {\r\n        throw error;\r\n      });\r\n  };\r\n}\r\n\r\nexport function loadEmotionSuccess(emotion) {\r\n  return { type: types.LOAD_EMOTION_SUCCESS, emotion };\r\n}\r\n\r\nexport function loadEmotion() {\r\n  return function(dispatch) {\r\n    return questApi\r\n      .getEmotion()\r\n      .then(emotion => {\r\n        dispatch(loadEmotionSuccess(emotion));\r\n      })\r\n      .catch(error => {\r\n        throw error;\r\n      });\r\n  };\r\n}\r\n\r\nexport function loadVillainSuccess(villain) {\r\n  return { type: types.LOAD_VILLAIN_SUCCESS, villain };\r\n}\r\n\r\nexport function loadVillain() {\r\n  return function(dispatch) {\r\n    return questApi\r\n      .getVillain()\r\n      .then(villain => {\r\n        dispatch(loadVillainSuccess(villain));\r\n      })\r\n      .catch(error => {\r\n        throw error;\r\n      });\r\n  };\r\n}\r\n\r\nexport function loadEvilPlotSuccess(evilPlot) {\r\n  return { type: types.LOAD_EVIL_PLOT_SUCCESS, evilPlot };\r\n}\r\n\r\nexport function loadEvilPlot() {\r\n  return function(dispatch) {\r\n    return questApi\r\n      .getEvilPlot()\r\n      .then(evilPlot => {\r\n        dispatch(loadEvilPlotSuccess(evilPlot));\r\n      })\r\n      .catch(error => {\r\n        throw error;\r\n      });\r\n  };\r\n}\r\n\r\nexport function loadActionSuccess(action) {\r\n  return { type: types.LOAD_ACTION_SUCCESS, action };\r\n}\r\n\r\nexport function loadAction() {\r\n  return function(dispatch) {\r\n    return questApi\r\n      .getAction()\r\n      .then(action => {\r\n        dispatch(loadActionSuccess(action));\r\n      })\r\n      .catch(error => {\r\n        throw error;\r\n      });\r\n  };\r\n}\r\n\r\nexport function loadEntryTextSuccess(entryText) {\r\n  return { type: types.LOAD_ENTRY_TEXT_SUCCESS, entryText };\r\n}\r\n\r\nexport function loadEntryText() {\r\n  return function(dispatch) {\r\n    return questApi\r\n      .getEntryText()\r\n      .then(entryText => {\r\n        dispatch(loadEntryTextSuccess(entryText));\r\n      })\r\n      .catch(error => {\r\n        throw error;\r\n      });\r\n  };\r\n}\r\n\r\nexport function loadMagicalObjectSuccess(magicalObject) {\r\n  return { type: types.LOAD_MAGICAL_OBJECT_SUCCESS, magicalObject };\r\n}\r\n\r\nexport function loadMagicalObject() {\r\n  return function(dispatch) {\r\n    return questApi\r\n      .getMagicalObject()\r\n      .then(magicalObject => {\r\n        dispatch(loadMagicalObjectSuccess(magicalObject));\r\n      })\r\n      .catch(error => {\r\n        throw error;\r\n      });\r\n  };\r\n}\r\n\r\nexport function loadGroupNameSuccess(groupName) {\r\n  return { type: types.LOAD_GROUP_NAME_SUCCESS, groupName };\r\n}\r\n\r\nexport function loadGroupName() {\r\n  return function(dispatch) {\r\n    return questApi\r\n      .getGroupName()\r\n      .then(groupName => {\r\n        dispatch(loadGroupNameSuccess(groupName));\r\n      })\r\n      .catch(error => {\r\n        throw error;\r\n      });\r\n  };\r\n}\r\n\r\nexport function loadAdjectiveSuccess(adjective) {\r\n  return { type: types.LOAD_ADJECTIVE_SUCCESS, adjective };\r\n}\r\n\r\nexport function loadAdjective() {\r\n  return function(dispatch) {\r\n    return questApi\r\n      .getAdjective()\r\n      .then(adjective => {\r\n        dispatch(loadAdjectiveSuccess(adjective));\r\n      })\r\n      .catch(error => {\r\n        throw error;\r\n      });\r\n  };\r\n}\r\n\r\nexport function loadLairSuccess(lair) {\r\n  return { type: types.LOAD_LAIR_SUCCESS, lair };\r\n}\r\n\r\nexport function loadLair() {\r\n  return function(dispatch) {\r\n    return questApi\r\n      .getLair()\r\n      .then(lair => {\r\n        dispatch(loadLairSuccess(lair));\r\n      })\r\n      .catch(error => {\r\n        throw error;\r\n      });\r\n  };\r\n}\r\n\r\nexport function loadPersonSuccess(person) {\r\n  return { type: types.LOAD_PERSON_SUCCESS, person };\r\n}\r\n\r\nexport function loadPerson() {\r\n  return function(dispatch) {\r\n    return questApi\r\n      .getPerson()\r\n      .then(person => {\r\n        dispatch(loadPersonSuccess(person));\r\n      })\r\n      .catch(error => {\r\n        throw error;\r\n      });\r\n  };\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport * as pokeActions from \"../../redux/actions/pokeActions\";\r\nimport * as monsterActions from \"../../redux/actions/monsterActions\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"../../index.css\";\r\n\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nclass CoursesPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  componentDidMount() {\r\n    // const { courses, authors, actions } = this.props;\r\n    // if (this.props.courses.length === 0) {\r\n    //   this.props.actions.loadCourses().catch(error => {\r\n    //     alert(\"You messed up1\" + error);\r\n    //   });\r\n    // }\r\n\r\n    // if (this.props.authors.length === 0) {\r\n    //   this.props.actions.loadAuthors().catch(error => {\r\n    //     alert(\"You messed up2\" + error);\r\n    //   });\r\n    // }\r\n\r\n    this.props.actions.loadMonsters().catch(error => {\r\n      alert(\"Monsters did not load\" + error);\r\n    });\r\n\r\n    this.props.actions.loadEntryText().catch(error => {\r\n      alert(\"Entry text did not load\" + error);\r\n    });\r\n\r\n    this.props.actions.loadGroupName().catch(error => {\r\n      alert(\"Group Name did not load\" + error);\r\n    });\r\n\r\n    this.props.actions.loadAdjective().catch(error => {\r\n      alert(\"Group Name did not load\" + error);\r\n    });\r\n\r\n    this.props.actions.loadVillain().catch(error => {\r\n      alert(\" did not load\" + error);\r\n    });\r\n\r\n    this.props.actions.loadEvilPlot().catch(error => {\r\n      alert(\"Evil plot did not load\" + error);\r\n    });\r\n\r\n    this.props.actions.loadMagicalObject().catch(error => {\r\n      alert(\"Magical Object did not load\" + error);\r\n    });\r\n\r\n    this.props.actions.loadLair().catch(error => {\r\n      alert(\"Lair did not load\" + error);\r\n    });\r\n\r\n    this.props.actions.loadAction().catch(error => {\r\n      alert(\"Action did not load\" + error);\r\n    });\r\n\r\n    this.props.actions.loadPerson().catch(error => {\r\n      alert(\"Person did not load\" + error);\r\n    });\r\n  }\r\n\r\n  render() {\r\n    var quest = \"\";\r\n\r\n    var divStyle = {\r\n      display: \"none\"\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <h2>WHAT IS MY QUEST?</h2>\r\n\r\n        <div style={divStyle}>\r\n          {checkIfFinished(this.props) === false\r\n            ? console.log(\"\")\r\n            : (quest = generateQuest(this.props))}\r\n        </div>\r\n\r\n        <div className={getTextSize(quest.length)}>\r\n          {checkIfFinished(this.props) === false\r\n            ? console.log(\"\")\r\n            : quest.toUpperCase()}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nCoursesPage.propTypes = {\r\n  monsters: PropTypes.array,\r\n  entryText: PropTypes.array,\r\n  groupName: PropTypes.array,\r\n  adjective: PropTypes.array,\r\n  villain: PropTypes.array,\r\n  evilPlot: PropTypes.array,\r\n  magicalObject: PropTypes.array,\r\n  lair: PropTypes.array,\r\n  action: PropTypes.array,\r\n  test: PropTypes.string,\r\n  pokes: PropTypes.object,\r\n  actions: PropTypes.object.isRequired,\r\n  person: PropTypes.object.isRequired\r\n};\r\n\r\nfunction getRandomInt(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\nfunction checkIfFinished(props) {\r\n  if (\r\n    props.monsters === undefined ||\r\n    props.entryText === undefined ||\r\n    props.groupName === undefined ||\r\n    props.villain === undefined ||\r\n    props.adjective === undefined ||\r\n    props.evilPlot === undefined ||\r\n    props.magicalObject === undefined ||\r\n    props.lair === undefined ||\r\n    props.action === undefined ||\r\n    props.person === undefined\r\n  ) {\r\n    console.log(props);\r\n    return false;\r\n  } else {\r\n    console.log(\"done\");\r\n    return true;\r\n  }\r\n}\r\n\r\nfunction getTextSize(questLength) {\r\n  var textSize48 = \"textSize48\";\r\n  var textSize38 = \"textSize38\";\r\n\r\n  if (questLength >= 150) {\r\n    return textSize48 + \" mainDisplay\";\r\n  } else if (questLength >= 200) {\r\n    return textSize38 + \" mainDisplay\";\r\n  } else {\r\n    return \"mainDisplay\";\r\n  }\r\n}\r\n\r\nfunction generateQuest(props) {\r\n  var quest = \"\";\r\n\r\n  var randomNum = getRandomInt(0, 4);\r\n  var THIS = \" THIS \";\r\n  var HAS_TO_STOP_A = \" HAS TO STOP A \";\r\n  var WHO_IS_TRYING_TO = \" WHO IS TRYING TO \";\r\n  var NEED_TO_FIND_A = \" NEED TO FIND A \";\r\n  var TO_STOP = \" TO STOP \";\r\n  var THAT_IS_FOUND_IN = \" THAT IS FOUND \";\r\n  var HAS_TO_FIGHT = \" HAS TO FIGHT \";\r\n  var THAT = \" THAT \";\r\n  var WOKE_UP = \" WOKE UP \";\r\n  var FULL_OF = \" FULL OF \";\r\n  var THAT_LIKE_TO = \" THAT LIKE TO \";\r\n  var HAS_TO_SAVE_A = \" HAS TO SAVE A \";\r\n  var WHO_IS_TRAPPED_IN = \" WHO IS TRAPPED  \";\r\n\r\n  console.log(props);\r\n\r\n  if (randomNum === 0) {\r\n    // [ENTRY TEXT] THIS [GROUP] HAS TO STOP A [ADJECTIVE][VILLAIN] WHO IS TRYING TO [EVIL PLOT]\r\n    quest =\r\n      props.entryText[getRandomInt(0, props.entryText.length - 1)][0] +\r\n      THIS +\r\n      props.groupName[getRandomInt(0, props.groupName.length - 1)][0] +\r\n      HAS_TO_STOP_A +\r\n      props.adjective[getRandomInt(0, props.adjective.length - 1)][0] +\r\n      \" \" +\r\n      props.villain[getRandomInt(0, props.villain.length - 1)][0] +\r\n      WHO_IS_TRYING_TO +\r\n      props.evilPlot[getRandomInt(0, props.evilPlot.length - 1)][0];\r\n  } else if (randomNum === 1) {\r\n    // [ENTRY TEXT] THIS [GROUP] NEED TO FIND [MAGICAL OBJECT] THAT IS FOUND [LAIR] TO STOP A [VILLAIN]\r\n    quest =\r\n      props.entryText[getRandomInt(0, props.entryText.length - 1)][0] +\r\n      THIS +\r\n      props.groupName[getRandomInt(0, props.groupName.length - 1)][0] +\r\n      NEED_TO_FIND_A +\r\n      props.magicalObject[getRandomInt(0, props.magicalObject.length - 1)][0] +\r\n      THAT_IS_FOUND_IN +\r\n      props.lair[getRandomInt(0, props.lair.length - 1)][0] +\r\n      TO_STOP +\r\n      props.villain[getRandomInt(0, props.villain.length - 1)][0];\r\n  } else if (randomNum === 2) {\r\n    // [ENTRY TEXT] THIS [GROUP] HAS TO FIGHT [NUMBER] OF [MONSTER] WHO ARE [EMOTION] THAT [ACTION]\r\n    quest =\r\n      props.entryText[getRandomInt(0, props.entryText.length - 1)][0] +\r\n      THIS +\r\n      props.groupName[getRandomInt(0, props.groupName.length - 1)][0] +\r\n      HAS_TO_FIGHT +\r\n      getRandomInt(2, 9) +\r\n      \" \" +\r\n      props.adjective[getRandomInt(0, props.adjective.length - 1)][0] +\r\n      \" \" +\r\n      props.monsters[getRandomInt(0, props.monsters.length - 1)][0] +\r\n      \"s\" +\r\n      THAT +\r\n      props.action[getRandomInt(0, props.action.length - 1)][0];\r\n  } else if (randomNum === 3) {\r\n    // [ENTRY TEXT] THIS [GROUP] WOKE UP [LAIR] FULL OF [ADJECTIVE][MONSTERS] THAT LIKE TO [ACTION]\r\n    quest =\r\n      props.entryText[getRandomInt(0, props.entryText.length - 1)][0] +\r\n      THIS +\r\n      props.groupName[getRandomInt(0, props.groupName.length - 1)][0] +\r\n      WOKE_UP +\r\n      props.lair[getRandomInt(0, props.lair.length - 1)][0] +\r\n      FULL_OF +\r\n      props.adjective[getRandomInt(0, props.adjective.length - 1)][0] +\r\n      \" \" +\r\n      props.monsters[getRandomInt(0, props.monsters.length - 1)][0] +\r\n      \"s\" +\r\n      THAT_LIKE_TO +\r\n      props.action[getRandomInt(0, props.action.length - 1)][0];\r\n  } else if (randomNum === 4) {\r\n    // [ENTRY TEXT] THIS [GROUP] HAS TO SAVE A [ADJECTIVE][PERSON] WHO IS TRAPPED [LAIR]\r\n    quest =\r\n      props.entryText[getRandomInt(0, props.entryText.length - 1)][0] +\r\n      THIS +\r\n      props.groupName[getRandomInt(0, props.groupName.length - 1)][0] +\r\n      HAS_TO_SAVE_A +\r\n      props.adjective[getRandomInt(0, props.adjective.length - 1)][0] +\r\n      \" \" +\r\n      props.person[getRandomInt(0, props.person.length - 1)][0] +\r\n      WHO_IS_TRAPPED_IN +\r\n      props.lair[getRandomInt(0, props.lair.length - 1)][0];\r\n  }\r\n\r\n  // alert(randomNum);\r\n  return quest;\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  debugger;\r\n  return {\r\n    // courses:\r\n    //   state.authors.length === 0\r\n    //     ? []\r\n    //     : state.courses.map(course => {\r\n    //         return {\r\n    //           ...course,\r\n    //           authorName: state.authors.find(a => a.id === course.authorId).name\r\n    //         };\r\n    //       }),\r\n    // authors: state.authors,\r\n    // monsters:\r\n    //   state.monsters.length === 0 ? {} : Array.from(state.monsters.values)\r\n    monsters: state.monsters.values,\r\n    entryText: state.entryText.values,\r\n    groupName: state.groupName.values,\r\n    villain: state.villain.values,\r\n    adjective: state.adjective.values,\r\n    test: state.test,\r\n    evilPlot: state.evilPlot.values,\r\n    magicalObject: state.magicalObject.values,\r\n    lair: state.lair.values,\r\n    action: state.action.values,\r\n    person: state.person.values\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    actions: {\r\n      //   loadCourses: bindActionCreators(courseActions.loadCourses, dispatch),\r\n      loadMonsters: bindActionCreators(monsterActions.loadMonsters, dispatch),\r\n      loadEntryText: bindActionCreators(monsterActions.loadEntryText, dispatch),\r\n      loadGroupName: bindActionCreators(monsterActions.loadGroupName, dispatch),\r\n      loadAdjective: bindActionCreators(monsterActions.loadAdjective, dispatch),\r\n      loadVillain: bindActionCreators(monsterActions.loadVillain, dispatch),\r\n      loadEvilPlot: bindActionCreators(monsterActions.loadEvilPlot, dispatch),\r\n      loadMagicalObject: bindActionCreators(\r\n        monsterActions.loadMagicalObject,\r\n        dispatch\r\n      ),\r\n      loadLair: bindActionCreators(monsterActions.loadLair, dispatch),\r\n      loadAction: bindActionCreators(monsterActions.loadAction, dispatch),\r\n      loadPerson: bindActionCreators(monsterActions.loadPerson, dispatch)\r\n      //   loadAuthors: bindActionCreators(authorActions.loadAuthors, dispatch)\r\n    }\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(CoursesPage);\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport HomePage from \"./home/HomePage\";\r\n// import AboutPage from \"./about/AboutPage\";\r\n// import Header from \"./common/Header\";\r\nimport PageNotFound from \"./PageNotFound\";\r\n// import CoursesPage from \"./courses/CoursesPage\";\r\n// import PokemonPage from \"./pokemon/pokemonPage\";\r\nimport \"../index.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"conatainer-fluid\">\r\n      {/* <Header /> */}\r\n      <HomePage />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","export default {\r\n  courses: [],\r\n  pokes: {},\r\n  authors: [],\r\n  monsters: {},\r\n  emotion: {},\r\n  scenario: {},\r\n  adjective: {},\r\n  lair: {},\r\n  villain: {},\r\n  magicalObject: {},\r\n  evilPlot: {},\r\n  action: {},\r\n  entryText: {},\r\n  groupName: {},\r\n  person: {},\r\n  test: \"\"\r\n};\r\n","import * as types from \"../actions/actionTypes\";\r\nimport initialState from \"./initialState\";\r\n\r\nexport default function courseReducer(state = initialState.courses, action) {\r\n  switch (action.type) {\r\n    case types.CREATE_COURSE:\r\n      // state.push(action.course);\r\n      return [...state, { ...action.course }];\r\n    case types.LOAD_COURSES_SUCCESS:\r\n      return action.courses;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as types from \"../actions/actionTypes\";\r\nimport initialState from \"./initialState\";\r\n\r\nexport default function authorReducer(state = initialState.authors, action) {\r\n  switch (action.type) {\r\n    case types.LOAD_AUTHORS_SUCCESS:\r\n      return action.authors;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport courses from \"./courseReducer\";\r\nimport authors from \"./authorReducer\";\r\nimport pokes from \"./pokeReducer\";\r\nimport monsters from \"./monsterReducer\";\r\nimport adjective from \"./adjectiveReducer\";\r\nimport author from \"./authorReducer\";\r\nimport course from \"./courseReducer\";\r\nimport emotion from \"./emotionReducer\";\r\nimport entryText from \"./entryTextReducer\";\r\nimport evilPlot from \"./evilPlotReducer\";\r\nimport groupName from \"./groupNameReducer\";\r\nimport lair from \"./lairReducer\";\r\nimport magicalObject from \"./magicalObjectReducer\";\r\nimport scenario from \"./scenarioReducer\";\r\nimport villain from \"./villainReducer\";\r\nimport action from \"./actionReducer\";\r\nimport person from \"./personReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  courses,\r\n  pokes,\r\n  authors,\r\n  monsters,\r\n  adjective,\r\n  author,\r\n  course,\r\n  emotion,\r\n  entryText,\r\n  evilPlot,\r\n  groupName,\r\n  lair,\r\n  magicalObject,\r\n  scenario,\r\n  villain,\r\n  action,\r\n  person\r\n});\r\n\r\nexport default rootReducer;\r\n","import * as types from \"../actions/actionTypes\";\r\nimport initialState from \"./initialState\";\r\n\r\nexport default function courseReducer(state = initialState.pokes, action) {\r\n  switch (action.type) {\r\n    case types.LOAD_POKES_SUCCESS:\r\n      return action.pokes;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as types from \"../actions/actionTypes\";\r\nimport initialState from \"./initialState\";\r\n\r\nexport default function monsterReducer(state = initialState.monsters, action) {\r\n  switch (action.type) {\r\n    case types.LOAD_MONSTERS_SUCCESS:\r\n      return action.monsters;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as types from \"../actions/actionTypes\";\r\nimport initialState from \"./initialState\";\r\n\r\nexport default function adjectiveReducer(\r\n  state = initialState.adjective,\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case types.LOAD_ADJECTIVE_SUCCESS:\r\n      return action.adjective;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as types from \"../actions/actionTypes\";\r\nimport initialState from \"./initialState\";\r\n\r\nexport default function emotionReducer(state = initialState.emotion, action) {\r\n  switch (action.type) {\r\n    case types.LOAD_EMOTION_SUCCESS:\r\n      return action.emotion;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as types from \"../actions/actionTypes\";\r\nimport initialState from \"./initialState\";\r\n\r\nexport default function entryTextReducer(\r\n  state = initialState.entryText,\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case types.LOAD_ENTRY_TEXT_SUCCESS:\r\n      return action.entryText;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as types from \"../actions/actionTypes\";\r\nimport initialState from \"./initialState\";\r\n\r\nexport default function evilPlotReducer(state = initialState.evilPlot, action) {\r\n  switch (action.type) {\r\n    case types.LOAD_EVIL_PLOT_SUCCESS:\r\n      return action.evilPlot;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as types from \"../actions/actionTypes\";\r\nimport initialState from \"./initialState\";\r\n\r\nexport default function groupNameReducer(\r\n  state = initialState.groupName,\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case types.LOAD_GROUP_NAME_SUCCESS:\r\n      return action.groupName;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as types from \"../actions/actionTypes\";\r\nimport initialState from \"./initialState\";\r\n\r\nexport default function lairReducer(state = initialState.lair, action) {\r\n  switch (action.type) {\r\n    case types.LOAD_LAIR_SUCCESS:\r\n      return action.lair;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as types from \"../actions/actionTypes\";\r\nimport initialState from \"./initialState\";\r\n\r\nexport default function magicalObjectReducer(\r\n  state = initialState.magicalObject,\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case types.LOAD_MAGICAL_OBJECT_SUCCESS:\r\n      return action.magicalObject;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as types from \"../actions/actionTypes\";\r\nimport initialState from \"./initialState\";\r\n\r\nexport default function scenarioReducer(state = initialState.scenario, action) {\r\n  switch (action.type) {\r\n    case types.LOAD_SCENARIO_SUCCESS:\r\n      return action.scenario;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as types from \"../actions/actionTypes\";\r\nimport initialState from \"./initialState\";\r\n\r\nexport default function villainReducer(state = initialState.villain, action) {\r\n  switch (action.type) {\r\n    case types.LOAD_VILLAIN_SUCCESS:\r\n      return action.villain;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as types from \"../actions/actionTypes\";\r\nimport initialState from \"./initialState\";\r\n\r\nexport default function actionReducer(state = initialState.action, action) {\r\n  switch (action.type) {\r\n    case types.LOAD_ACTION_SUCCESS:\r\n      return action.action;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as types from \"../actions/actionTypes\";\r\nimport initialState from \"./initialState\";\r\n\r\nexport default function personReducer(state = initialState.person, action) {\r\n  switch (action.type) {\r\n    case types.LOAD_PERSON_SUCCESS:\r\n      return action.person;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport App from \"./components/App\";\r\nimport \"./index.css\";\r\nimport configureStore from \"./redux/configureStore\";\r\nimport { Provider as ReduxProvider } from \"react-redux\";\r\n// import \"index.css\";\r\n\r\nconst store = configureStore();\r\n\r\nrender(\r\n  // <div>HI</div>,\r\n  <ReduxProvider store={store}>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </ReduxProvider>,\r\n  document.getElementById(\"app\")\r\n);\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\nimport reduxImmutableStateInvariant from \"redux-immutable-state-invariant\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nexport default function configureStore(initialState) {\r\n  const composeEnhancers =\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n  return createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeEnhancers(applyMiddleware(thunk, reduxImmutableStateInvariant()))\r\n  );\r\n}\r\n"],"sourceRoot":""}